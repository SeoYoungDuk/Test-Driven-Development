일시 : 6/20(화), 점심시간
읽을 범위 : 1장 ~ 3장


1부 화폐 예제
테스트 주도 전형적 모델 코드 보여줌

의문이 있을것이다? 
- 작은 증가분 커버
- 각각 테스트를 돌하가게 하기 위해 얼마나 작고 못생긴 변화가 가능한지
- 얼마나 자주 테스트가 실행 되는지
- 얼마나 수 없이 작은 단계를 통해 리팩토링이 되어가는지

1장 다중통화를 지원하는 Money 객체

1. 할일 목록들을 적음
2. 테스트 작성할때 오퍼레이션의 완벽한 인터페이스를 상상해봄
3. 테스트를 통과하게 함 (컴파일 되지 않으니 객체를 만듬)
4. 악한 짓을 저지름
5. 중복 제거함 -> 메소드에 중복되는 곱셈 계산 식을 옮김


2장 타락한 객체
목적 -> 작동하는 깔끔한 코드를 얻는것
1. 작동하는 코드를 먼저 만들고 그다음에 깔끔한 코드 만듬
2. 테스트 하나가 통과 했지만 계속 적으로 곱셈을 수행 할 때 응답이 달라짐
3. 가짜로 구현하거나( 상수를 반환하게 만들고 진짜 코드를 얻을때까지 상수를 변수로 바꿈), 실제 구현 입력

=> 설계에서 누수되는 부분을 추가적으로 테스트로 작성 하고, 그것을 해결함

3장 모두를 위한 평등
값 객체 패턴 => equals 구현
삼각측량(두개이상의 예제로 검증) -> 감 안올때만 사용함
