일시 : 7/4(화), 점심시간
읽을 범위 : 10장 ~ 12장
준비 사항 : 읽을 범위내에서 인상 깊었거나 같이 이야기해보고 싶은 문장/단락 들을 1~2개 정도씩 준비하기

10장
인상 깊었던 점: 펙토리 메소드로 리팩토링 했었는데, 다시 생성자로 되돌아갔다.
그러면서 Money 생성자를 호출하게 변경함.

11장
테스트도 리팩토링을 하는것처럼 Franc 클래스의 잔재물들을 테스트에서 삭제했다.

12장
더하기 구현
인상 깊었던것
어떻게 설계할지 명백하지 않으면 가짜 구현을 하고, 리팩토링 하는식으로 구현
환율을 표현하면서, 산술연산처럼 다룰 객체를 상상해봤다(사기꾼이라고 칭함) => Bank 객체 (하는 일이 없음)

이야기 해봤으면 좋겠는거
Expression 이라는 객체를 만들고
요 핵심이되는 객체가 다른부분에 대해서는 될 수 있는한 모르도록 노력한다(캡슐화, 핵심 도메인 이자 다른 객체와 의존관계가 없이 설계) 그럼 오랫동안 유연할수있고,
테스트 하기 쉬울뿐 아니라, 재활용 하거나 이해하기 쉬운 상태로 남아있을수 있다.
 
